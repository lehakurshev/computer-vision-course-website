name: Deploy

on:
  workflow_dispatch:

env:
  SERVER_HOST: ${{ secrets.HOST_IP_ADDRESS }}
  SERVER_USER: ${{ secrets.HOST_USER_NAME }}
  YOOKASSA_SHOP_ID: ${{ secrets.YOOKASSA_SHOP_ID }}
  YOOKASSA_SHOP_SECRET: ${{ secrets.YOOKASSA_SHOP_SECRET }}
  GOOGLE_SHEET_CREDENTIALS: ${{ secrets.GOOGLE_SHEET_CREDENTIALS }}
  PROJECT_PATH: /home/lehakurshev/computer-vision-course-website

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure we have the entire git history

      - name: Configure SSH Agent with Passphrase
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.CVCOURSE_GITHUB_ACTIONS_KEY }}
          ssh-private-key-passphrase: ${{ secrets.CVCOURSE_GITHUB_ACTIONS_PASSPHRASE }} # Добавьте секрет для passphrase

      - name: Create auth.json on server
        run: |
          echo '${{ secrets.GOOGLE_SHEET_CREDENTIALS }}' | ssh -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "cat > ${{ env.PROJECT_PATH }}/server/auth.json"
      
      - name: Deploy to Server
        run: |
          # Update code on server (fetch latest changes from main and reset)
          ssh -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
            cd ${{ env.PROJECT_PATH }};
            git fetch --all;
            git reset --hard origin/main;
          "

          # Run Docker Compose
          ssh -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
            cd ${{ env.PROJECT_PATH }};
            export SERVER_HOST='${{ env.SERVER_HOST }}';
            export YOOKASSA_SHOP_ID='${{ env.YOOKASSA_SHOP_ID }}';
            export YOOKASSA_SHOP_SECRET='${{ env.YOOKASSA_SHOP_SECRET }}';
            export GOOGLE_SHEET_CREDENTIALS='${{ env.GOOGLE_SHEET_CREDENTIALS }}'
            # Clean up unused Docker resources
            docker system prune -f --volumes;
            docker-compose down --rmi all --volumes;
            docker-compose up --build -d
          "
